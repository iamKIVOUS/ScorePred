# Generated by Django 5.2 on 2025-05-05 08:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('final_score_home', models.PositiveIntegerField(blank=True, null=True)),
                ('final_score_away', models.PositiveIntegerField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('city', models.CharField(max_length=100)),
                ('coach_name', models.CharField(max_length=100)),
                ('founded_year', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probability_home_win', models.FloatField()),
                ('probability_away_win', models.FloatField()),
                ('model_version', models.CharField(default='v1', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('match', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='prediction', to='basketball.match')),
                ('predicted_winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predicted_wins', to='basketball.team')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('PG', 'Point Guard'), ('SG', 'Shooting Guard'), ('SF', 'Small Forward'), ('PF', 'Power Forward'), ('C', 'Center')], max_length=2)),
                ('jersey_number', models.PositiveIntegerField()),
                ('height_cm', models.PositiveIntegerField()),
                ('weight_kg', models.PositiveIntegerField()),
                ('date_of_birth', models.DateField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='basketball.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='team_away',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='basketball.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team_home',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='basketball.team'),
        ),
        migrations.CreateModel(
            name='PlayerPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes_played', models.FloatField()),
                ('points', models.PositiveIntegerField()),
                ('assists', models.PositiveIntegerField()),
                ('rebounds', models.PositiveIntegerField()),
                ('steals', models.PositiveIntegerField()),
                ('blocks', models.PositiveIntegerField()),
                ('turnovers', models.PositiveIntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_performances', to='basketball.match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='basketball.player')),
            ],
            options={
                'unique_together': {('player', 'match')},
            },
        ),
    ]
